"The jack of all trades is the master of none"

Don't try to create some new super-flexible thing to serve all sorts of different masters. Don't do it. Unless existing specialized designs are terribly inefficient.

The Law of Flexibility Tradeoffs:
- As the flexibility of a design increases, the usability and performance of the design decreases.

Why?

Flexibility entails satisfying a LARGER SET OF REQUIREMENTS, which can often CONFLICT WITH EACH OTHER, and which can MEAN COMPROMISES AND COMPLEXITY in the design, which INCREASE COST, AND DECREASE PERFORMANCE AND USABILITY.

WHEN ARE FLEXIBILITY TRADEOFFS WORTH IT?

Ask these questions:
1. Is suboptimal good enough?
2. Is the performance environment stable (not going to change)?
3. Are performance and user requirements similar?
4. Can the functions be modularized in the design?
5. Does the value of flexibility justify the tradeoffs?